# ExamMaster TODO List

## 高優先級 (High Priority) - 核心功能缺失

### 1. 題目管理 CRUD 操作
- [ ] 實作 DeleteQuestion backend method (app.go)
- [ ] 實作 UpdateQuestion backend method (app.go)
- [ ] 實作 CreateQuestion backend method (app.go)
- [ ] 暴露 GetQuestionByID 到 app.go
- [ ] 連接前端 QuestionManagement.tsx 到後端

### 2. 計時器功能
- [ ] 在練習介面實作計時器顯示
- [ ] 實作每題時間限制
- [ ] 加入暫停/繼續功能

### 3. 題目群組管理
- [ ] 實作 DeleteQuestionGroup backend method
- [ ] 實作 UpdateQuestionGroup backend method
- [ ] 建立群組階層管理 UI
- [ ] 實作群組間的父子關係顯示

## 中優先級 (Medium Priority) - 使用體驗增強

### 4. 主題系統
- [ ] 實作深色模式切換
- [ ] 建立主題系統架構
- [ ] 套用主題到所有元件

### 5. 練習模式增強
- [ ] 實作跳過題目功能 (allowSkipQuestions)
- [ ] 實作即時答案顯示 (showImmediateAnswers)
- [ ] 區分練習/測驗/複習模式的行為差異
- [ ] 加入練習階段恢復功能

### 6. 匯入/匯出功能
- [ ] 實作匯入使用者資料功能
- [ ] 支援 CSV/Excel 格式匯入
- [ ] 實作選擇性匯出功能
- [ ] 加入匯入進度顯示

### 7. 統計與分析
- [ ] 實作最弱主題分析
- [ ] 加入學習目標追蹤顯示
- [ ] 建立圖表視覺化 (使用 Chart.js 或類似庫)
- [ ] 實作可列印報表功能

## 低優先級 (Low Priority) - 進階功能

### 8. 多語言支援
- [ ] 建立 i18n 系統
- [ ] 翻譯所有 UI 文字
- [ ] 實作語言切換功能

### 9. 通知系統
- [ ] 實作桌面通知
- [ ] 建立每日提醒系統
- [ ] 加入通知歷史記錄

### 10. 鍵盤快捷鍵
- [ ] 定義快捷鍵架構
- [ ] 實作練習介面快捷鍵 (1-4 選擇答案, Space 下一題)
- [ ] 加入全域快捷鍵

### 11. 搜尋功能
- [ ] 實作全域搜尋
- [ ] 加入進階搜尋篩選器
- [ ] 支援搜尋歷史

### 12. 備份系統
- [ ] 實作自動備份排程
- [ ] 建立備份歷史追蹤
- [ ] 加入雲端備份選項

### 13. 錯題功能增強
- [ ] 實作智慧錯題分類
- [ ] 建立間隔重複演算法
- [ ] 加入錯題趨勢分析

### 14. 圖片支援
- [ ] 實作題目圖片顯示
- [ ] 加入圖片上傳功能
- [ ] 支援圖片縮放檢視

### 15. 無障礙功能
- [ ] 加入螢幕閱讀器支援
- [ ] 實作高對比模式
- [ ] 確保字體大小設定套用到所有元件

## 技術債務 (Technical Debt)

### 16. 程式碼重構
- [ ] 統一錯誤處理模式
- [ ] 加強型別定義
- [ ] 改善元件間通訊
- [ ] 優化資料庫查詢

### 17. 測試覆蓋
- [ ] 加入單元測試
- [ ] 建立整合測試
- [ ] 實作 E2E 測試

### 18. 效能優化
- [ ] 實作虛擬滾動 for 大量題目
- [ ] 優化資料庫索引
- [ ] 加入快取機制

## 實作順序建議

1. 先完成高優先級的核心功能 (1-3)
2. 接著處理影響使用體驗的中優先級功能 (4-7)
3. 最後考慮低優先級的進階功能
4. 持續處理技術債務

## 注意事項

- 每個功能完成後都要更新對應的文件
- 確保新功能有適當的錯誤處理
- 保持 UI/UX 的一致性
- 考慮向後相容性